name: Cloudstate

on:
  push:
    branches: [ main ]
    paths:
      - 'cloudstate/**'
      - '.github/workflows/cloudstate.yml'

env:
  PRODUCT_IMAGE_NAME: benchmark-cloudstate-product-service
  USER_IMAGE_NAME: benchmark-cloudstate-user-service
  SHOPPINGCART_IMAGE_NAME: benchmark-cloudstate-shoppingcart-service
  ORDER_IMAGE_NAME: benchmark-cloudstate-order-service
  API_IMAGE_NAME: benchmark-statefun-api

defaults:
  run:
    working-directory: cloudstate

jobs:
  build-push-product-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java 11
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 11

      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          username: _json_key
          password: "${{ secrets.GC_JSON_KEY }}"
          registry: eu.gcr.io

      - name: Build and push with JIB
        run: |
          ./gradlew :product-service:jib \
          -Djib.to.image=eu.gcr.io/${{ secrets.GC_PROJECT_ID }}/${{ env.PRODUCT_IMAGE_NAME }}

  build-push-order-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java 11
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 11

      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          username: _json_key
          password: "${{ secrets.GC_JSON_KEY }}"
          registry: eu.gcr.io

      - name: Build and push with JIB
        run: |
          ./gradlew :order-service:jib \
          -Djib.to.image=eu.gcr.io/${{ secrets.GC_PROJECT_ID }}/${{ env.ORDER_IMAGE_NAME }}

  build-push-user-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java 11
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 11

      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          username: _json_key
          password: "${{ secrets.GC_JSON_KEY }}"
          registry: eu.gcr.io

      - name: Build and push with JIB
        run: |
          ./gradlew :user-service:jib \
          -Djib.to.image=eu.gcr.io/${{ secrets.GC_PROJECT_ID }}/${{ env.USER_IMAGE_NAME }}

  build-push-shoppingcart-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java 11
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 11

      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          username: _json_key
          password: "${{ secrets.GC_JSON_KEY }}"
          registry: eu.gcr.io

      - name: Build and push with JIB
        run: |
          ./gradlew :shoppingcart-service:jib \
          -Djib.to.image=eu.gcr.io/${{ secrets.GC_PROJECT_ID }}/${{ env.SHOPPINGCART_IMAGE_NAME }}

  build-push-api-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java 11
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 11

      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          username: _json_key
          password: "${{ secrets.GC_JSON_KEY }}"
          registry: eu.gcr.io

      - name: Build and push with JIB
        run: |
          ./gradlew :api:jib \
          -Djib.to.image=eu.gcr.io/${{ secrets.GC_PROJECT_ID }}/${{ env.API_IMAGE_NAME }}